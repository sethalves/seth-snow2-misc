(define-library (seth-tests flex tests)
  (export run-tests)
  (import (scheme base)
          (scheme write)
          (scheme file)
          (seth flex)
          (seth port-extras)
          )
  (include "snazzle.scm")
  (begin
    (define (run-tests)
      (let* ((inp (open-binary-input-file (if (file-exists? "snazzle.test")
                                              "snazzle.test"
                                              "seth-tests/flex/snazzle.test")))
             (data (read-all-u8 inp))
             (tokens (tokinize snazzle data))
             ;; (get-next-token (lambda ()
             ;;                   (cond ((null? tokens) #f)
             ;;                         (else
             ;;                          (let ((ret (car tokens)))
             ;;                            (set! tokens (cdr tokens))
             ;;                            ret)))))
             )
        ;; (tokens->trees get-next-token #f verbose)
        (write tokens)
        (newline)
        #t))))
